services:
  web:
    build:
      context: .
    container_name: fastapi_app
    ports:
      - "80:8080"
    command: ["uvicorn", "app.main:app", "--reload", "--host", "0.0.0.0", "--port", "8080"]
    depends_on:
      db:
        condition: service_started
      rabbitmq:
        condition: service_healthy
      worker:
        condition: service_started

    volumes:
      - .:/app

  db:
    image: postgres:15
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 10s
      timeout: 5s
      retries: 5

  worker:
    build:
      context: .
    command: celery -A app.celery.celery worker --loglevel=info
    volumes:
      - .:/app
    depends_on:
      - rabbitmq
      - db

volumes:
  postgres_data:
  rabbitmq_data:
